
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author adaobi
 */
public class Login extends javax.swing.JFrame {

    String Email;
    String StaffID;
    String DOB;
    String firstname;
    String password;
    private String loggedInFirstname;
    private String loggedInEmail;
    private java.util.Date loggedInDOB;

    /**
     * Creates new form Login
     */
    public Login() {
        setLocationRelativeTo(null);
        initComponents();
    }

    /*private static String hashPassword(String password) {
        try {
            MessageDigest digest = MessageDigest.getInstance("SHA-256");
            byte[] hash = digest.digest(password.getBytes());

            // Convert the byte array to a hexadecimal string
            StringBuilder hexString = new StringBuilder();
            for (byte b : hash) {
                String hex = Integer.toHexString(0xff & b);
                if (hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }

            return hexString.toString();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel17 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesandicons/LSQ_SummerMarket_July23_EventBanners.png"))); // NOI18N
        jLabel17.setText("jLabel17");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel6.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Sitka Display", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Email");
        jPanel6.add(jLabel5);
        jLabel5.setBounds(250, 170, 140, 31);

        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });
        jPanel6.add(jTextField9);
        jTextField9.setBounds(590, 150, 220, 40);

        jLabel14.setFont(new java.awt.Font("Sitka Heading", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Password");
        jPanel6.add(jLabel14);
        jLabel14.setBounds(250, 230, 140, 23);
        jPanel6.add(jTextField10);
        jTextField10.setBounds(590, 230, 220, 40);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesandicons/icons8-login-100.png"))); // NOI18N
        jButton7.setText("LOGIN");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton7);
        jButton7.setBounds(620, 410, 190, 60);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesandicons/icons8-register-48.png"))); // NOI18N
        jButton8.setText("REGISTER");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton8);
        jButton8.setBounds(230, 410, 170, 60);

        jLabel15.setFont(new java.awt.Font("Sitka Small", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Department ");
        jPanel6.add(jLabel15);
        jLabel15.setBounds(250, 286, 150, 30);

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Department", "Sales", "Inventory/Stock", "IT" }));
        jComboBox5.setToolTipText("");
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        jPanel6.add(jComboBox5);
        jComboBox5.setBounds(590, 300, 220, 40);

        jLabel16.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesandicons/icons8-pos-48.png"))); // NOI18N
        jLabel16.setText("POINT OF SALE SYSTEM");
        jPanel6.add(jLabel16);
        jLabel16.setBounds(170, 50, 596, 44);

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesandicons/Red Blue & White Remembrance Flower Memorial Day Instagram Post.png"))); // NOI18N
        jLabel18.setText("jLabel18");
        jPanel6.add(jLabel18);
        jLabel18.setBounds(-30, 0, 1200, 780);

        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jEditorPane1);

        jPanel6.add(jScrollPane1);
        jScrollPane1.setBounds(460, 90, 115, 22);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 1010, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(947, 544));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String enteredEmail = jTextField9.getText();
        String enteredPassword = jTextField10.getText();
        String selectedDivision = (String) jComboBox5.getSelectedItem();
        System.out.println(enteredEmail);

        if (selectedDivision.equals("Select")) {
            JOptionPane.showMessageDialog(this, "Please select a division.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Load the MySQL JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");

            // Establish the database connection
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "Nkoli1510");

            String sql;

            if (selectedDivision.equals("Sales")) {
                sql = "SELECT password, DOB, firstname FROM sales_db WHERE Email = ?";
            } else if (selectedDivision.equals("Inventory/Stock")) {
                sql = "SELECT password, DOB, firstname FROM inventory_db WHERE Email = ?";
            } else if (selectedDivision.equals("IT")) {
                sql = "SELECT password, DOB, firstname FROM it_db WHERE Email = ?";
            } else {
                // Handle invalid division
                JOptionPane.showMessageDialog(this, "Invalid division selected.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            PreparedStatement ps = con.prepareStatement(sql);

            // Set values in the prepared statement
            ps.setString(1, enteredEmail);

            // Execute the query
            ResultSet rs = ps.executeQuery();

            // Check if the result set has any rows (matching record)
            if (rs.next()) {
                String storedPassword = rs.getString("password");
                java.sql.Date dobFromDB = rs.getDate("DOB");
                loggedInFirstname = rs.getString("firstname");
                LocalDate birthday = dobFromDB.toLocalDate();
                firstname = loggedInFirstname;

                // Compare the hashed password from the database with the hash of the entered password
                if (hashPassword(enteredPassword).equals(storedPassword)) {
                    // Login successful
                    JOptionPane.showMessageDialog(rootPane, "Login successful!");
                    
                    if (selectedDivision.equals("Sales")) {
                        new Sales_department(enteredEmail).setVisible(true);
                    } else if (selectedDivision.equals("Inventory/Stock")) {
                        new Stock(enteredEmail).setVisible(true);
                    } else if (selectedDivision.equals("IT")) {
                        new IT_D().setVisible(true);
                    }
                    if (isBirthday(birthday)) {
                        showBirthdayNotification(firstname);
                        sendBirthdayEmail(firstname, enteredEmail);
                    }
                    this.dispose();
                } else {
                    // Password mismatch
                    JOptionPane.showMessageDialog(rootPane, "Login failed. Invalid email or password.", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                // Login failed - no matching record found
                JOptionPane.showMessageDialog(rootPane, "Login failed. Invalid email or password.", "Error", JOptionPane.ERROR_MESSAGE);
            }

            // Close the connection, statement, and result set
            con.close();

        } catch (ClassNotFoundException | SQLException ex) {
            ex.printStackTrace();
        }

        // Define the hashPassword method
    }

    private String hashPassword(String password) {
        try {
            MessageDigest digest = MessageDigest.getInstance("SHA-256");
            byte[] hash = digest.digest(password.getBytes(StandardCharsets.UTF_8));

            // Convert the byte array to a hexadecimal string
            StringBuilder hexString = new StringBuilder();
            for (byte b : hash) {
                String hex = Integer.toHexString(0xff & b);
                if (hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }

            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
            return null;
        }
    }

    private boolean isBirthday(LocalDate dob) {
        // Compare the user's date of birth with the current date
        // Return true if it's the birthday, false otherwise
        // You can use a library like java.time.LocalDate for date comparisons

        // Sample code using java.time.LocalDate (requires Java 8 or later)
        LocalDate today = LocalDate.now();
        return today.getMonth() == dob.getMonth() && today.getDayOfMonth() == dob.getDayOfMonth();
    }

    private void showBirthdayNotification(String firstname) {
//        // Show a pop-up notification using JOptionPane
        JOptionPane.showMessageDialog(this, "Today is " + firstname + " birthday!!!", "Birthday Notification", JOptionPane.INFORMATION_MESSAGE);
    }

    private void sendBirthdayEmail(String firstname, String email) {
////        // Modify your existing email sending logic to include birthday greetings
////        // You can customize the email body to contain a birthday message
        String body = "Happy Birthday, " + firstname + "! We wish you a fantastic day.";
////
        String senderEmail = "arinzechiadaobiada@gmail.com";  // Replace with your email
        String senderPassword = "vycz vkxf fbht defd";
        String subject = "Birthday Greetings";

        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");

        // Email session
        Session session = Session.getInstance(props, new javax.mail.Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(senderEmail, senderPassword);
            }
        });

        try {
            // Create a message
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(senderEmail));
            message.setRecipient(Message.RecipientType.TO, new InternetAddress(Email));
            message.setSubject(subject);
            message.setText(body);

            // Send the message
            Transport.send(message);

            System.out.println("Birthday email sent successfully!");

        } catch (MessagingException e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        this.dispose();
        Registration homepage = new Registration();
        homepage.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField10;
    public static javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
