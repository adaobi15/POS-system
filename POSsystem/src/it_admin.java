


import java.sql.Connection;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.io.FileInputStream;
import java.io.IOException;
import java.security.MessageDigest;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Properties;
import java.util.Random;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author adaobi
 */
public class it_admin extends javax.swing.JFrame {
 public String filename = null;
    static byte photo[] = null;
    
    /**
     * Creates new form User
     */
    public it_admin() {
        initComponents();
    }
private byte[] getPhotoData() throws IOException {
    File imageFile = new File(filename);
    FileInputStream fis = null;
    ByteArrayOutputStream baos = null;

    try {
        fis = new FileInputStream(imageFile);
        baos = new ByteArrayOutputStream();
        byte[] buffer = new byte[1024];

        int bytesRead;
        while ((bytesRead = fis.read(buffer)) != -1) {
            baos.write(buffer, 0, bytesRead);
        }

        return baos.toByteArray();
    } finally {
        if (fis != null) {
            fis.close();
        }
        if (baos != null) {
            baos.close();
        }
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);
        jPanel1.add(jDateChooser1);
        jDateChooser1.setBounds(128, 368, 415, 22);

        jRadioButton1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setText("Male");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton1);
        jRadioButton1.setBounds(128, 437, 49, 21);

        jRadioButton2.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setText("Female");
        jPanel1.add(jRadioButton2);
        jRadioButton2.setBounds(482, 437, 70, 21);

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("DEPARTMENT");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(6, 313, 90, 16);

        jButton1.setText("UPDATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(600, 540, 79, 23);

        jButton2.setText("CLEAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(860, 530, 79, 23);
        jPanel1.add(jTextField2);
        jTextField2.setBounds(128, 192, 415, 22);
        jPanel1.add(jTextField3);
        jTextField3.setBounds(128, 254, 415, 22);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Department", "Sales", "Inventory/Stock", "IT" }));
        jComboBox1.setToolTipText("");
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(128, 310, 415, 22);

        jButton3.setText("REGISTER");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(850, 430, 90, 23);

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("E-MAIL");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(6, 562, 90, 16);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("DOB");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(6, 374, 60, 16);

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Phone Number");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(6, 510, 110, 16);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.orange, null, java.awt.Color.blue, java.awt.Color.yellow));
        jLabel10.setOpaque(true);
        jPanel1.add(jLabel10);
        jLabel10.setBounds(636, 118, 285, 140);

        jButton4.setText("Browse Image ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(801, 270, 120, 23);
        jPanel1.add(jTextField5);
        jTextField5.setBounds(128, 559, 416, 22);

        jButton5.setText("webcam");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(636, 270, 75, 23);
        jPanel1.add(jTextField4);
        jTextField4.setBounds(128, 507, 416, 22);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("SURNAME");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(15, 198, 80, 16);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Gender");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(6, 439, 70, 16);
        jPanel1.add(jTextField1);
        jTextField1.setBounds(128, 128, 415, 22);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("FIRST NAME");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(15, 128, 80, 22);

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("STAFF ID");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(15, 257, 70, 16);

        jLabel5.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesandicons/manage_accounts_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        jLabel5.setText("IT ADMIN");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(37, 19, 170, 41);

        jButton6.setText("ENTER");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(666, 66, 72, 23);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("SEARCH");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(138, 69, 70, 16);
        jPanel1.add(jTextField7);
        jTextField7.setBounds(212, 66, 403, 22);

        jButton7.setText("RESET PASSWORD");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7);
        jButton7.setBounds(700, 570, 160, 23);

        jButton9.setText("VIEW");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9);
        jButton9.setBounds(600, 430, 72, 23);

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesandicons/Red Blue & White Remembrance Flower Memorial Day Instagram Post.png"))); // NOI18N
        jLabel9.setText("jLabel9");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(-3, -4, 950, 690);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(969, 668));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                    
    try {
        // Load the MySQL JDBC driver
        Class.forName("com.mysql.cj.jdbc.Driver");

        // Establish the database connection
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "Nkoli1510");

        // Get values from UI components
        String firstname = jTextField1.getText();
        String Surname = jTextField2.getText();
        String StaffID = jTextField3.getText();
        String Department = jComboBox1.getSelectedItem().toString();

        // Get date of birth from the JDateChooser
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String DOB = dateFormat.format(jDateChooser1.getDate());
        String Gender = null;
        if (jRadioButton1.isSelected()) {
            Gender = "Male";
        } else if (jRadioButton2.isSelected()) {
            Gender = "Female";
        }

        String Phonenumber = jTextField4.getText();
        String Email = jTextField5.getText();
byte[] photo = getPhotoData();
 
        // Prepare the SQL update query
        String updateQuery = "UPDATE " + getTableName(Department) + " SET "
                + "firstname=?, Surname=?, StaffID=?, Department=?, DOB=?, Gender=?, Phonenumber=?, Email=?, photo=? "
                + "WHERE StaffID=?";
        
        PreparedStatement ps = con.prepareStatement(updateQuery);

        // Set values for the parameters
        ps.setString(1, firstname);
        ps.setString(2, Surname);
        ps.setString(3, StaffID);
        ps.setString(4, Department);
        ps.setString(5, DOB);
        ps.setString(6, Gender);
        ps.setString(7, Phonenumber);
        ps.setString(8, Email);
          ps.setBytes(9, photo);
        ps.setString(10, StaffID);  // Set StaffID for WHERE clause

        // Execute the update query
        int rowsAffected = ps.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(rootPane, "User details updated successfully!");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Failed to update user details.");
        }

        // Close the resources
        ps.close();
        con.close();
    } catch (Exception e) {
        e.printStackTrace();
    }
}

private String getTableName(String department) {
    switch (department) {
        case "Sales":
            return "sales_db";
        case "Inventory/Stock":
            return "inventory_db";
        case "IT":
            return "it_db";
        default:
            // Handle the case where department is not recognized
            return null;
    }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        buttonGroup1.clearSelection();
        jComboBox1.setSelectedIndex(0);      // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      // TODO add your handling code here:
        // Add your signup logic here
        try {
            // Load the JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");

            // Establish the database connection
            java.sql.Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "Nkoli1510");

            // Get values from UI components
            String firstname = jTextField1.getText();
            String Surname = jTextField2.getText();
            String StaffID = jTextField3.getText();
            String Department = jComboBox1.getSelectedItem().toString();

            // Get date of birth from the JDateChooser
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String DOB = dateFormat.format(jDateChooser1.getDate());
            String Gender = null;
            if (jRadioButton1.isSelected()) {
                Gender = "Male";

            } else if (jRadioButton2.isSelected()) {
                Gender = "Female";
            }

            String Phonenumber = jTextField4.getText();
            String Email = jTextField5.getText();
            String tableName;
            switch (Department) {
                case "Sales":
                    tableName = "sales_db";
                    break;
                case "Inventory/Stock":
                    tableName = "inventory_db";
                    break;
                case "IT":
                    tableName = "it_db";
                    break;
                default:
                    // Handle the case where department is not recognized
                    tableName = null;
                    break;
            }

            // Prepare the SQL query
            String generatedPassword = generateRandomPassword();
            String hashedPassword = hashPassword(generatedPassword);
            // String score = "0";

            // Use the generated password in the email body
            String body = "Thank you for registering with us. Your password is: " + generatedPassword;

            // Email sender details
            String senderEmail = "arinzechiadaobiada@gmail.com";  // Replace with your email
            String senderPassword = "vycz vkxf fbht defd";
            String subject = "Registration Confirmation";

            Properties props = new Properties();
            props.put("mail.smtp.host", "smtp.gmail.com");
            props.put("mail.smtp.port", "587");
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.starttls.enable", "true");

            // Email session
            Session session = Session.getInstance(props, new javax.mail.Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(senderEmail, senderPassword);
                }
            });
            try {
                // Create a message
                Message message = new MimeMessage(session);
                message.setFrom(new InternetAddress("arinzechiadaobiada@gmail.com"));
                message.setRecipient(Message.RecipientType.TO, new InternetAddress(Email)); // Use the 'Email' variable here
                message.setSubject(subject);
                message.setText(body);

                // Send the message
                Transport.send(message);

                System.out.println("Email sent successfully!");

            } catch (MessagingException e) {
                e.printStackTrace();
            }
 if (tableName != null) {
            // Prepare SQL query
            String sql = "INSERT INTO " + tableName + "(firstname, Surname, StaffID, Department,DOB, Gender,Phonenumber, Email,photo,password) VALUES (?, ?, ?,?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement ps = con.prepareStatement(sql);

            // Set values for the parameters
            ps.setString(1, firstname);
            ps.setString(2, Surname);
            ps.setString(3, StaffID);
            ps.setString(4, Department);
            ps.setString(5, DOB);
            ps.setString(6, Gender);
            ps.setString(7, Phonenumber);
            ps.setString(8, Email);
            ps.setBytes(9, photo);
            ps.setString(10, hashedPassword);

            // Execute the query
            int rowsAffected = ps.executeUpdate();

            if (rowsAffected > 0) {
                System.out.println("Student record inserted successfully");

                // Send email with generated password
            } else {
                 System.out.println("Failed to insert record");
            }

            // Close the resources
            ps.close();
             } else {
        // Handle the case where department is not recognized
        System.out.println("Invalid department selected");
    }
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Function to generate a random password
    private static String generateRandomPassword() {
        int length = 8;
        String characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        Random random = new Random();
        StringBuilder password = new StringBuilder();

        for (int i = 0; i < length; i++) {
            password.append(characters.charAt(random.nextInt(characters.length())));
        }

        return password.toString();
    }

    private static String hashPassword(String password) {
        try {
            MessageDigest digest = MessageDigest.getInstance("SHA-256");
            byte[] hash = digest.digest(password.getBytes());

            // Convert the byte array to a hexadecimal string
            StringBuilder hexString = new StringBuilder();
            for (byte b : hash) {
                String hex = Integer.toHexString(0xff & b);
                if (hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }

            return hexString.toString();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         try {
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Image", "jpg");
            jFileChooser1.setAcceptAllFileFilterUsed(false);
            jFileChooser1.addChoosableFileFilter(filter);
            jFileChooser1.showOpenDialog(null);

            jFileChooser1.showOpenDialog(null);
            File f = jFileChooser1.getSelectedFile();
            filename = f.getAbsolutePath();
            Image im = Toolkit.getDefaultToolkit().createImage(filename);
            im = im.getScaledInstance(jLabel10.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon ic = new ImageIcon(im);
            jLabel10.setIcon(ic);
            File image = new File(filename);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte[] Byte = new byte[1024];

            for (int i; (i = fis.read(Byte)) != -1;) {
                baos.write(Byte, 0, i);
            }
            photo = baos.toByteArray();

        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        webcam newWebcam = new webcam();
        newWebcam.show();
        newWebcam.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    try {
    String StaffID = jTextField7.getText();

    // Query to fetch data from all three tables
    String selectQuery = "SELECT * FROM sales_db WHERE StaffID = ? "
            + "UNION "
            + "SELECT * FROM inventory_db WHERE StaffID = ? "
            + "UNION "
            + "SELECT * FROM it_db WHERE StaffID = ?";

    java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "Nkoli1510");
    PreparedStatement preparedStatement = connection.prepareStatement(selectQuery);

    // Set the StaffID parameter for each UNION
    preparedStatement.setString(1, StaffID);
    preparedStatement.setString(2, StaffID);
    preparedStatement.setString(3, StaffID);

    // Execute the query and process the results
    ResultSet resultSet = preparedStatement.executeQuery();

    if (resultSet.next()) {
        // Retrieve values from the result set
       
        String retrievedfirstname = resultSet.getString("firstname");
        String retrievedSurname = resultSet.getString("Surname");
         String retrievedStaffID = resultSet.getString("StaffID");
        String retrievedDepartment = resultSet.getString("Department");
        String retrievedDOB = resultSet.getString("DOB");
        String retrievedGender = resultSet.getString("Gender");
        String retrievedPhoneNumber = resultSet.getString("PhoneNumber");
        String retrievedEmail = resultSet.getString("Email");
        byte[] retrievedPhoto = resultSet.getBytes("Photo");

        // Set values to the text fields
        jTextField1.setText(retrievedfirstname);
        jTextField2.setText(retrievedSurname);
        jTextField3.setText(retrievedStaffID);
        // Assuming jComboBox1 is a JComboBox
        jComboBox1.setSelectedItem(retrievedDepartment);

        // Assuming jDateChooser1 is a JDateChooser
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        java.util.Date parsedDate = dateFormat.parse(retrievedDOB);
        jDateChooser1.setDate(parsedDate);

        if ("Male".equals(retrievedGender)) {
            jRadioButton1.setSelected(true);
        } else if ("Female".equals(retrievedGender)) {
            jRadioButton2.setSelected(true);
        }

        jTextField4.setText(retrievedPhoneNumber);
        jTextField5.setText(retrievedEmail);
        // Assuming jLabel10 is a JLabel for displaying the photo
        // Set the photo using the retrieved byte array
       ImageIcon imageIcon = new ImageIcon(retrievedPhoto);
       jLabel10.setIcon(imageIcon);
    } else {
        JOptionPane.showMessageDialog(rootPane, "StaffID not found.");
    }

} catch (Exception e) {
    JOptionPane.showMessageDialog(rootPane, e);
}

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
try {
    String firstName = jTextField1.getText(); 
        String StaffID = jTextField7.getText();

        // Query to fetch data from all three tables
        String selectQuery = "SELECT * FROM sales_db WHERE StaffID = ? "
                + "UNION "
                + "SELECT * FROM inventory_db WHERE StaffID = ? "
                + "UNION "
                + "SELECT * FROM it_db WHERE StaffID = ?";

        java.sql.Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "Nkoli1510");
        PreparedStatement preparedStatement = connection.prepareStatement(selectQuery);

        // Set the StaffID parameter for each UNION
        preparedStatement.setString(1, StaffID);
        preparedStatement.setString(2, StaffID);
        preparedStatement.setString(3, StaffID);

        // Execute the query and process the results
        ResultSet resultSet = preparedStatement.executeQuery();

        if (resultSet.next()) {
            // Retrieve values from the result set
            // ... (your existing code to retrieve other fields)

            // Generate a new random password
            String newPassword = generateRandomPassword();
             
            // Hash the new password
            String hashedPassword = hashPassword(newPassword);
          
            // Update the password in the 'sales_db' table
            updatePasswordForTable(connection, "sales_db", StaffID, hashedPassword);

            // Update the password in the 'inventory_db' table
            updatePasswordForTable(connection, "inventory_db", StaffID, hashedPassword);

            // Update the password in the 'it_db' table
            updatePasswordForTable(connection, "it_db", StaffID, hashedPassword);

            // Inform the user that the password has been reset
            JOptionPane.showMessageDialog(rootPane, "Password reset successful. New password: " + firstName  + newPassword);

        } else {
            JOptionPane.showMessageDialog(rootPane, "StaffID not found.");
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(rootPane, e);
    }
    }
    private void sendEmail(String senderEmail, String senderPassword, String recipientEmail, String subject, String body) {
    Properties props = new Properties();
    props.put("mail.smtp.host", "smtp.gmail.com");
    props.put("mail.smtp.port", "587");
    props.put("mail.smtp.auth", "true");
    props.put("mail.smtp.starttls.enable", "true");

    // Email session
    Session session = Session.getInstance(props, new javax.mail.Authenticator() {
        @Override
        protected PasswordAuthentication getPasswordAuthentication() {
            return new PasswordAuthentication(senderEmail, senderPassword);
        }
    });

    try {
        // Create a message
        Message message = new MimeMessage(session);
        message.setFrom(new InternetAddress(senderEmail));
        message.setRecipient(Message.RecipientType.TO, new InternetAddress(recipientEmail));
        message.setSubject(subject);
        message.setText(body);

        // Send the message
        Transport.send(message);

        System.out.println("Email sent successfully!");

    } catch (MessagingException e) {
        e.printStackTrace();
         JOptionPane.showMessageDialog(rootPane, "Failed to send email. Check the console for details.");
    }
    }
private void updatePasswordForTable(Connection con, String tableName, String staffID, String hashedPassword) throws SQLException {
    String updatePasswordQuery = "UPDATE " + tableName + " SET password = ? WHERE StaffID = ?";
    
    try (PreparedStatement updatePasswordStatement = con.prepareStatement(updatePasswordQuery)) {
        updatePasswordStatement.setString(1, hashedPassword);
        updatePasswordStatement.setString(2, staffID);

        // Execute the update query
        updatePasswordStatement.executeUpdate();
    }    
    // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
 Reset Login2 = new Reset();
        Login2.setVisible(true);      // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(it_admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(it_admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(it_admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(it_admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new it_admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables
}
